name: "Kafka Cluster Creation"
on:
   workflow_dispatch:
     inputs:
       action:
         description: 'Action to perform'
         required: true
         default: 'create'
         type: choice
         options:
           - create
           - destroy
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 CONFLUENT_CLOUD_API_KEY: ${{ secrets.CCLOUD_API_KEY }}
 CONFLUENT_CLOUD_API_SECRET: ${{ secrets.CCLOUD_API_SECRET }}
 ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
 ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
 ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
 ARM_ACCESS_HEY: ${{ secrets.AZ_STORAGE_ACCESS_KEY }}
# ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
 TF_VAR_subscription_id: ${{ secrets.AZ_SUBSCRIPTION_ID }}

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./private-link/confluent
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.7
     - name: Terraform init
       id: init
       run: terraform init
     - name: Terraform plan
       id: plan
       run: terraform plan -input=false
       if: inputs.action == 'create'
       continue-on-error: true
     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1
     - name: Terraform Apply
       if: inputs.action == 'create'
       run: terraform apply -auto-approve -input=false
     - name: Terraform Destroy
       if: inputs.action == 'destroy'
       run: terraform destroy -auto-approve -input=false